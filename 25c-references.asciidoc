== References ==

**Other Hadoop Books**

* Hadoop the Definitive Guide, Tom White
* Hadoop Operations, Eric Sammer
* http://www.manning.com/holmes/[Hadoop In Practice] (Alex Holmes)


* http://hadoop.apache.org/docs/mapreduce/current/streaming.html[Hadoop Streaming FAQ]
* http://hadoop.apache.org/docs/r0.20.2/mapred-default.html[Hadoop Configuration defaults -- mapred]


**Unreasonable Effectiveness of Data**

* https://www.facebook.com/video/video.php?v=644326502463[Peter Norvig\'s Facebook Tech Talk]
* http://www.youtube.com/watch?v=yvDCzhbjYWs[Later version of that talk at ??] -- I like the 
* http://static.googleusercontent.com/media/research.google.com/en/us/pubs/archive/35179.pdf["On the Unreasonable effectiveness of data"]

**Source material**

* http://en.wikipedia.org/wiki/Lexington,_Texas[Wikipedia article on Lexington, Texas] (CC-BY-SA)

* http://borrelli.org/2012/04/29/installing-hadoop-on-osx-lion/[Installing Hadoop on OSX Lion]

* http://blog.markfeeney.com/2010/10/jmx-through-ssh-tunnel.html[JMX through a ssh tunnel]

* http://www.amazon.com/dp/039334777X[Naked Statistics]
* http://www.amazon.com/Head-First-Statistics-Dawn-Griffiths/dp/0596527586[Head First Statistics]


* http://ercoppa.github.io/HadoopInternals/HadoopConfigurationParameters.html[Hadoop Configurations in context -- Flow diagrams]

* http://www.slideshare.net/cloudera/mr-perf[Hadoop Summit 2012 | Optimizing MapReduce Job Performance] by Todd Lipcon (@tlipcon)

**To Consider**

* http://www.cse.unt.edu/~rada/downloads.html -- Texts semantically annotated with WordNet 1.6 senses (created at Princeton University), and automatically mapped to WordNet 1.7, WordNet 1.7.1, WordNet 2.0, WordNet 2.1, WordNet 3.0

**Code Sources**

* https://github.com/yohasebe/wp2txt[wp2txt], by http://yohasebe.com[Yoichiro Hasebe]

the http://github.com/schacon/git-scribe[git-scribe toolchain] was very useful creating this book. Instructions on how to install the tool and use it for things like editing this book, submitting errata and providing translations can be found at that site.


* James, Bill (2010-05-08). The New Bill James Historical Baseball Abstract (Kindle Locations 11684-11685). Free Press. Kindle Edition. 


* map of the caribbean: https://en.wikipedia.org/wiki/Area_codes_in_the_Caribbean

==== Patterns ====

MySQL Cookbook
SQL Cookbook



=== Geographic Analysis

-- http://blog.notdot.net/2009/11/Damn-Cool-Algorithms-Spatial-indexing-with-Quadtrees-and-Hilbert-Curves
-- http://bost.ocks.org/mike/example/
-- http://infolab.usc.edu/csci585/Spring2008/den_ar/p182-samet.pdf
-- http://www.geo.upm.es/postgrado/CarlosLopez/materiales/cursos/NCGIA_core/u37.html

* http://kartoweb.itc.nl/geometrics/Introduction/introduction.html -- an excellent overview of projections, reference surfaces and other fundamentals of geospatial analysis.
* http://msdn.microsoft.com/en-us/library/bb259689.aspx
* http://www.maptiler.org/google-maps-coordinates-tile-bounds-projection/
* http://wiki.openstreetmap.org/wiki/QuadTiles
* https://github.com/simplegeo/polymaps
* http://www.slideshare.net/mmalone/scaling-gis-data-in-nonrelational-data-stores[Scaling GIS Data in Non-relational Data Stores] by Mike Malone

* http://www.comp.lancs.ac.uk/~kristof/research/notes/voronoi/[Voronoi Diagrams]
* http://bl.ocks.org/4122298[US County borders in GeoJSON]

* http://sharpgis.net/post/2007/05/05/Spatial-references2c-coordinate-systems2c-projections2c-datums2c-ellipsoids-e28093-confusing.aspx[Spatial references, coordinate systems, projections, datums, ellipsoids] by Morten Nielsen

* https://github.com/jsongeo[Public repository of geometry boundaries into text]

* http://bost.ocks.org/mike/map/[Making a map in D3] ; see also http://stackoverflow.com/questions/14565963/topojson-for-congressional-districts[Guidance on making your own geographic bounaries].


==== Text Analysis ====

* http://thedatachef.blogspot.com/2011/04/tf-idf-with-apache-pig.html
* http://hortonworks.com/blog/pig-as-duct-tape-part-three-tf-idf-topics-with-cassandra-python-streaming-and-flask/
* http://hortonworks.com/blog/pig-macro-for-tf-idf-makes-topic-summarization-2-lines-of-pig/


* http://en.wikipedia.org/wiki/Wikipedia:List_of_controversial_issues
* http://wordnet.princeton.edu/wordnet/download/
* http://www.infochimps.com/datasets/list-of-dirty-obscene-banned-and-otherwise-unacceptable-words
* http://urbanoalvarez.es/blog/2008/04/04/bad-words-list
* entity names within angle brackets. Where possible these are drawn from Appendix D to ISO 8879:1986, Information Processing - Text & Office Systems - Standard Generalized Markup Language (SGML).
* http://faculty.cs.byu.edu/~ringger/CS479/papers/Gale-SimpleGoodTuring.pdf
* http://www.aclweb.org/anthology-new/P/P11/P11-1096.pdf
* http://www.ling.uni-potsdam.de/~gerlof/docs/npmi-pfd.pdf
* http://nltk.googlecode.com/svn/trunk/doc/howto/collocations.html
* Stanford Named Entity Parser - http://nlp.stanford.edu/software/CRF-NER.shtml
* http://nlp.stanford.edu/software/corenlp.shtml - 
  > Stanford CoreNLP provides a set of natural language analysis tools which can take raw English language text input and give the base forms of words, their parts of speech, whether they are names of companies, people, etc., normalize dates, times, and numeric quantities, and mark up the structure of sentences in terms of phrases and word dependencies, and indicate which noun phrases refer to the same entities. Stanford CoreNLP is an integrated framework, which make it very easy to apply a bunch of language analysis tools to a piece of text. Starting from plain text, you can run all the tools on it with just two lines of code. Its analyses provide the foundational building blocks for higher-level and domain-specific text understanding applications.
  > 
  > Stanford CoreNLP integrates all our NLP tools, including the part-of-speech (POS) tagger, the named entity recognizer (NER), the parser, and the coreference resolution system, and provides model files for analysis of English. The goal of this project is to enable people to quickly and painlessly get complete linguistic annotations of natural language texts. It is designed to be highly flexible and extensible. With a single option you can change which tools should be enabled and which should be disabled.
  > 
  > The Stanford CoreNLP code is written in Java and licensed under the GNU General Public License (v2 or later). Source is included. Note that this is the full GPL, which allows many free uses, but not its use in distributed proprietary software. The download is 259 MB and requires Java 1.6+.

* http://cogcomp.cs.illinois.edu/page/software_view/4
* http://opennlp.apache.org/

* http://www.movable-type.co.uk/scripts/latlong.html Calculate distance, bearing and more between Latitude/Longitude points

==== Locality-Sensitive Hashing & Sketching Algorithms ====

* http://www.slaney.org/malcolm/yahoo/Slaney2008-LSHTutorial.pdf[Locality-Sensitive Hashing for Finding Nearest Neighbors] by Malcolm Slaney and Michael Casey
* http://lingpipe-blog.com/2011/01/12/scaling-jaccard-distance-deduplication-shingling-minhash-locality-sensitive-hashi/
* http://www.scribd.com/collections/2287653/Locality-Sensitive-Hashing
* http://infolab.stanford.edu/~ullman/mmds/ch3a.pdf
* http://infolab.stanford.edu/~ullman/mining/2009/similarity2.pdf
* http://infolab.stanford.edu/~ullman/mining/2009/similarity1.pdf
* http://metaoptimize.com/qa/questions/8930/basic-questions-about-locally-sensitive-hashinglsh
* http://users.soe.ucsc.edu/~optas/papers/jl.pdf
* http://www.win-vector.com/dfiles/LocalitySensitiveHashing.pdf[An Appreciation of Locality Sensitive Hashing]
* http://www.cs.jhu.edu/~vandurme/papers/VanDurmeLallACL11.pdf[Efficient Online Locality Sensitive Hashing via Reservoir Counting]
* http://blog.smola.org/post/1130198570/hashing-for-collaborative-filtering

Johnson-Lindenstrauss Transform:

* http://users.soe.ucsc.edu/~optas/papers/jl.pdf[Johnson-Lindenstrauss with binary coins]
* https://www.cs.princeton.edu/~chazelle/pubs/stoc06.pdf
* http://ecee.colorado.edu/~fmeyer/class/ecen5322/ailon-chazelle2009.pdf[The Fast Johnsonâ€“Lindenstrauss Transform And Approximate Nearest Neighbors]
* http://scikit-learn.org/stable/auto_examples/plot_johnson_lindenstrauss_bound.html

Counting Streams (Count-Min-Sketch and friends):

* http://arxiv.org/pdf/0803.0473.pdf[Stream sampling for variance-optimal estimation of subset sums]



* http://www.r-tutor.com[Excellent collection of R tutorials]
* The split-apply-combine pattern in R
* http://had.co.nz/reshape/paper-dsc2005.pdf[Reshape R Package]
* 

Principal Component Analysis:

* http://en.wikipedia.org/wiki/Principal_component_analysis[Principal component analysis] Wikipedia entry



=== Time Series


* http://www.panz.in/2013/03/cep-hadoop.html[Correlating sequenced events for Hadoop and PIG]

* Sorted Integer Sets -- ?? super-efficient storage of sorted integers, useful in DocID sets and time series --
  - https://github.com/diegocaro/compression/blob/master/pfordelta.c[PForDelta algorithm for sorted integer arrays]
  - http://cis.poly.edu/cs912/indexcomp.pdf


=== Refs for outline


* Art of SQL
* SQL patterns
* Baseball hacks
* MySQL patterns
* SQL Design Patterns http://www.rampant-books.com/book_0601_sql_coding_styles.htm http://www.nocoug.org/download/2006-11/sql_patterns.ppt
* DB2 cookbook
* Patterns for improving runtime: http://www.idi.ntnu.no/~noervaag/papers/VLDBJ2013_MapReduceSurvey.pdf
* 

  
