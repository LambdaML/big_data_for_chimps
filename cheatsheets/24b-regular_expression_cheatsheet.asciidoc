
=== Regular Expressions ===

http://www.debuggex.com/?re=big(.+)\bd...&str=big-data-for-chimps

[[regexp_cheatsheet]]
.Regular Expression Cheatsheet
[options="header"]
|=======
| character			| meaning
|				|
| TODO				|
|				|
| `.`				| any character
| `\w`				| any word character: a-z, A-Z, 0-9 or `_` underscore. Use `[:word:]` to match extended alphanumeric characters (accented characters and so forth)
| `\s`				| any whitespace, whether space, tab (`\t`), newline (`\n`) or carriage return (`\r`).
| `\d`				| 
| `\x42` (or any number)	| the character with that hexadecimal encoding. 
| `\b`				| word boundary (zero-width)
| `^`				| start of line; use `\\A` for start of string (disregarding newlines). (zero-width)
| `$`				| end of line; use `\\z` for end of string (disregarding newlines). (zero-width)
| `[^a-mA-M]`			| match character in set
| `[a-mA-M]`			| reject characters in set
| `a\|b\|c`			| a or b or c
| `(...)`			| group
| `(?:...)`			| non-capturing group
| `(?<varname>...)`		| named group
|				|
| `*`, `+`			| zero or more, one or more. greedy (captures the longest possible match)
| `*?`, `+?`			| non-greedy zero-or-more, non-greedy one-or-more
| `{n,m}`			| repeats `n` or more, but `m` or fewer times
|				|
|=======

These <<regexp_examples>> are for practical extraction, not validation -- they may let nitpicks through that oughtn't (eg, a time zone of `-0000` is illegal by the spec, but will pass the date regexp given below). As always, modify them in your actual code to be as brittle (restrictive) as reasonable.

[[regexp_examples]]
.Example Regular Expressions
[options="header"]
|=======
| intent			| Regular Expression    				| Comment
| Double-quoted string		| `%r{"((?:\\.|[^\"])*)"}`  		        	| all backslash-escaped character, or non-quotes, up to first quote
| Decimal number with sign	| `%r{([\-\+\d]+\.\d+)}`                            	| optional sign; digits-dot-digits
| Floating-point number 	| `%r{([\+\-]?\d+\.\d+(?:[eE][\+\-]?\d+)?)}`       	| optional sign; digits-dot-digits; optional exponent
| ISO date               	| `%r{\b(\d\d\d\d)-(\d\d)-(\d\d)T(\d\d):(\d\d):(\d\d)([\+\-]\d\d:?\d\d|[\+\-]\d\d|Z)\b}`	| groups give year, month, day, hour, minute, second and time zone respectively.
|=======



// Ascii table:
// 
// 	"\x00"	\c	 	 
// 	"\x01"	\c	 	 
// 	"\x02"	\c	 	 
// 	"\x03"	\c	 	 
// 	"\x04"	\c	 	 
// 	"\x05"	\c	 	 
// 	"\x06"	\c	 	 
// 	"\a"	\c	 	 
// 	"\b"	\c	 	 
// 	"\t"	\c	 	\s
// 	"\n"	\c	 	\s
// 	"\v"	\c	 	\s
// 	"\f"	\c	 	\s
// 	"\r"	\c	 	\s
// 	"\x0E"	\c	 	 
// 	"\x0F"	\c	 	 
// 	"\x10"	\c	 	 
// 	"\x11"	\c	 	 
// 	"\x12"	\c	 	 
// 	"\x13"	\c	 	 
// 	"\x14"	\c	 	 
// 	"\x15"	\c	 	 
// 	"\x16"	\c	 	 
// 	"\x17"	\c	 	 
// 	"\x18"	\c	 	 
// 	"\x19"	\c	 	 
// 	"\x1A"	\c	 	 
// 	"\e"	\c	 	 
// 	"\x1C"	\c	 	 
// 	"\x1D"	\c	 	 
// 	"\x1E"	\c	 	 
// 	"\x1F"	\c	 	 
// 	" "	 	 	\s
// 	"!"	 	 	 
// 	"\""	 	 	 
// 	"#"	 	 	 
// 	"$"	 	 	 
// 	"%"	 	 	 
// 	"&"	 	 	 
// 	"'"	 	 	 
// 	"("	 	 	 
// 	")"	 	 	 
// 	"*"	 	 	 
// 	"+"	 	 	 
// 	","	 	 	 
// 	"-"	 	 	 
// 	"."	 	 	 
// 	"/"	 	 	 
// 	"0"	 	\w	 
// 	"1"	 	\w	 
// 	"2"	 	\w	 
// 	"3"	 	\w	 
// 	"4"	 	\w	 
// 	"5"	 	\w	 
// 	"6"	 	\w	 
// 	"7"	 	\w	 
// 	"8"	 	\w	 
// 	"9"	 	\w	 
// 	":"	 	 	 
// 	";"	 	 	 
// 	"<"	 	 	 
// 	"="	 	 	 
// 	">"	 	 	 
// 	"?"	 	 	 
// 	"@"	 	 	 
// 	"A"	 	\w	 
// 	"B"	 	\w	 
// 	"C"	 	\w	 
// 	"D"	 	\w	 
// 	"E"	 	\w	 
// 	"F"	 	\w	 
// 	"G"	 	\w	 
// 	"H"	 	\w	 
// 	"I"	 	\w	 
// 	"J"	 	\w	 
// 	"K"	 	\w	 
// 	"L"	 	\w	 
// 	"M"	 	\w	 
// 	"N"	 	\w	 
// 	"O"	 	\w	 
// 	"P"	 	\w	 
// 	"Q"	 	\w	 
// 	"R"	 	\w	 
// 	"S"	 	\w	 
// 	"T"	 	\w	 
// 	"U"	 	\w	 
// 	"V"	 	\w	 
// 	"W"	 	\w	 
// 	"X"	 	\w	 
// 	"Y"	 	\w	 
// 	"Z"	 	\w	 
// 	"["	 	 	 
// 	"\\"	 	 	 
// 	"]"	 	 	 
// 	"^"	 	 	 
// 	"_"	 	\w	 
// 	"`"	 	 	 
// 	"a"	 	\w	 
// 	"b"	 	\w	 
// 	"c"	 	\w	 
// 	"d"	 	\w	 
// 	"e"	 	\w	 
// 	"f"	 	\w	 
// 	"g"	 	\w	 
// 	"h"	 	\w	 
// 	"i"	 	\w	 
// 	"j"	 	\w	 
// 	"k"	 	\w	 
// 	"l"	 	\w	 
// 	"m"	 	\w	 
// 	"n"	 	\w	 
// 	"o"	 	\w	 
// 	"p"	 	\w	 
// 	"q"	 	\w	 
// 	"r"	 	\w	 
// 	"s"	 	\w	 
// 	"t"	 	\w	 
// 	"u"	 	\w	 
// 	"v"	 	\w	 
// 	"w"	 	\w	 
// 	"x"	 	\w	 
// 	"y"	 	\w	 
// 	"z"	 	\w	 
// 	"{"	 	 	 
// 	"|"	 	 	 
// 	"}"	 	 	 
// 	"~"	 	 	 
// 	"\x7F"	\c	 	 
// 	"\x80"	\c	 	 
