=== Chimpanzee and Elephant Save Christmas (pt 1) ===

It was holiday time at the North Pole, and letters from little boys and little girls all over the world flooded in as they always do. But this year there was a problem: the world had grown, and the elves just could not keep up with the scale of requests. Luckily, their friends at the Elephant & Chimpanzee Data Shipment Company were available to simplify the process.

==== A Non-scalable approach ====

To meet the wishes of children from every corner of the earth, each elf specializes in a certain kind of toy, from Autobot to Pony to Yo-Yo.

[[elf_workstation]]
.The elves' workbenches are meticulous and neat.
image::images/chimps_and_elves/bchm_0201.png[Elf Workstations, pre-Hadoop]

[[mail_tree]]
.Little boys and girls' mail is less so.
image::images/chimps_and_elves/bchm_0202.png[Fetching the next letter to Santa]

As bags of mail arrived from every town and city, they were hung from the branches of the Bag Tree. Each time an elf was ready for the next letter, a big claw arm swung out to the right spot on the Bag Tree to retrieve it. "The locality of access is all wrong!" bellowed the chimps. "The next request for Lego is as likely to be from Cucamonga as from Novosibirsk, and letters can't be pulled from the tree any faster than the crane arm can move!"

What's worse, the size of Santa's operation meant that the workbenches were very far from where letters came in, and from the warehouses that held completed toys. The hallways were clogged with frazzled elves running back and forth between the Bag Tree, their workbench, and the shipping center -- they spent almost as much effort on the mechanics of retrieving letters and dropping off gifts as they did making toys. "Throughput, not Latency!" trumpeted the elephants. "For hauling heavy loads, you need a stately elephant parade, not a swarm of frazzled elves!"

==== Letters to Toy Requests ====

In marched the chimps and elephants, who (singing a rather bawdy version of the Map-Reduce Haiku) built the following system.

As you might guess from the last chapter, they set up a finite number of chimpanzees at a finite number of typewriters, each with an elephant desk-mate. Rather than the centralized Bag Tree, the elephants mustered to distribute mailbags all across the processing stations -- now they could be processed locally, rather than clogging up the hallways as the old Bag Tree required.

The chimps' job was to take letters one-by-one from a mailbag, and fill out a toyform for each requested toy. A toyform has a prominent label showing the type of toy, and a body with all the information you'd expect: Name, Goodness, Location, and so forth. As with all North Pole employees, they're able to tell who is naughty and who is nice. The first note, from a very good girl who is thoughtful for her brother, creates two toyforms: one for Joe's robot and one for Julia's doll. The second note is spam, so it creates no toyforms; the third one is from a kid who is not just a jerk but also a Yankees fan, and so Santa will put coal in his stocking.

        # Good kids, generates a toy for Julia and a toy for her brother

        Deer SANTA                                     robot | type="optimus prime" recipient="Joe"
                                                       doll  | type="green hair"  recipient="Joe's sister Julia"
        I wood like a doll for me and 
        and an optimus prime robot for my
	brother joe

        I have been good this year

        love julia

        # Spam, no action

        Greetings to you Mr Claus, I came to know
        of you in my search for a  reliable and
        reputable person to handle a very confidential
        business transaction, which involves the
        transfer of a huge sum of money...


        # Frank is a jerk. He will get coal.

        HEY SANTA I WANT A YANKEES HAT AND NOT             coal  | type="anthracite" recipient="Frank" reason="doesn't like to read"
        ANY DUMB BOOKS THIS YEAR

        FRANK

        ---------------------------------------         # Spam, no action

image::images/chimps_and_elves/bchm_0203.png[Chimps read each letter]
image::images/chimps_and_elves/bchm_0204.png[Letters become toyforms]

=== Chimpanzee and Elephant Save Christmas, part 2 ===

So far, this looks a lot like the process for the translation project, with letters in, toyforms out, and the elephant librarians ensuring a steady supply of mail. But a simple transform isn't enough. You see, the set-up for tying ribbons on Ponies is very different from the set-up for assembling a Yo-Yo. The elves would like to process each type of toy as a group, designating a specific workbench for each type of toy. All the robots and hats might go to workbench A, while all the ponies and yo-yos go to workbench B, and all the coal orders to workbench C.

image::images/chimps_and_elves/bchm_0205.png[Each toy at a unique station]

Here's the system C&E, Inc constructed. Next to each chimpanzee stands a line of pygmy elephants, one for each workbench. Each pygmy elephant bears a vertical file like you find on a very organized person's desk:

image::images/paper_sorter.jpg[paper sorter]
//// Perhaps a smaller sizing for the image? Amy////

The chimps places their toyforms into these file folders as fast as their dexterous fingers can file. Once all the letters in a mailbag have been handled, the elephants march off to the workbench they serve, and behind them a new line of elephants trundle into place, as the chimpanzee tears into a new mailbag. What fun!

image::images/chimps_and_elves/bchm_0206.png[toyforms go off in batches]



=== Hadoop vs Traditional Databases ===

Fundamentally, the storage engine at the heart of a traditional relational database does two things: it holds all the records, and it maintains a set of indexes for lookups and other operations. To retrieve a record, it must consult the appropriate index to find the location of the record, then load it from the disk. This is very fast for record-by-record retrieval, but becomes cripplingly inefficient for general high-throughput access. If the records are stored by location and arrival time (as the mailbags were on the Bag Tree), then
there is no "locality of access"
for records retrieved by, say, type of toy --
records for Lego will be spread all across the disk. With traditional drives, the disk's read head has to physically swing back and forth in a frenzy across the disk,
and though the newer flash drives have smaller retrieval latency it's still far too high for bulk operations.

What's more, traditional database applications lend themselves very well to low-latency operations (such as rendering a webpage showing the toys you requested), but very poorly to high-throughput operations (such as requesting every single doll order in sequence). Unless you invest specific expertise and effort, you have little ability to organize requests for efficient retrieval. You either suffer a variety of non-locality and congestion based inefficiencies, or wind up with an application that caters to the database more than to its users. You can to a certain extent use the laws of economics to bend the laws of physics -- as the commercial success of Oracle and Netezza show -- but the finiteness of time, space and memory present an insoluble scaling problem for traditional databases.

Hadoop solves the scaling problem by not solving the data organization problem. Rather than insist that the data be organized and indexed as it's written to disk, catering to every context that could be requested. Instead, it focuses purely on the throughput case. 
TODO explain disk is the new tape It takes X to seek but

The typical Hadoop operation streams large swaths of data 
The locality 


==== Toy Assembly ====

Each pygmy elephant carries its work orders to the workstation it serves. A workstation might handle several types of toys in a factory run, but always in a continuous batch -- the elves that handle ponies and yo-yos will see all the ponies first, and then all the yo-yos:

	Doll	Julia    	Anchorage	AK, USA
	Doll	Wei Ju		Shenzen	        China
        Doll	Michael   	Berlin  	Germany
	...
	Yo-Yo	Jim		Mountain View	CA, USA
	...
	Robot	Joe         	Austin    	TX, USA
	

You should wonder how, from all the medley outputs of all the rambunctious chimpanzees, these organized groups are formed. The answer is very clever: the elephants accomplish _grouping_ the toyforms by _sorting_ the toyforms.

[NOTE]
==========
You can try this for yourself: take a deck of cards, sort them by number, and fan the cards out in a line. You'll see that trivially separating piles where one number meets the next groups the cards by number.
==========

==== Sorted Groups ====

Earlier, as I mentioned that the chimps place the toyforms into the file folders, I skipped past an important detail.

The chimpanzees actually file their toyforms into the holder in sorted order. Since the folders aren't very big, and are immediately adjacent to the chimp's dexterous fingers, this doesn't take much additional time.

So when a pygmy elephant delivers its toyform sorter to a workbench, the forms within it are in order -- but of course there is no order across all the file folders. Elephant A might have "apple-cheeked", "cabbage patch" and "yellow-haired" dolls, elephant B "malibu", "raggedy", and "yellow-haired", and elephant C only a tall stack of "real Armenian" dolls. That's no problem though. Each elephant holds its topmost workform at the ready, and passes it to the elves once it's the next one in order to be processed. So in this case, workforms would come from elephant A, then A again, then B, and so on.

image::images/chimps_and_elves/bchm_0210.png[Secondary sort]

Elves do not have the prodigious memory that elephants do, but they can easily keep track of the next few dozen work orders each elephant holds. That way there is very little time spent seeking out the next work order. Elves assemble toys as fast as their hammers can fly, and the toys come out in the order Santa needs to make little children happy.

// You've seen that receiving all the toyforms for Dolls in a single batch make the elves more efficient. The elves requested that the toyforms be further grouped within each batch: so that all the dolls with "purple hair" arrive in a run, followed by dolls with "rosy cheeks", and so forth.

=== Hadoop Reducers ===
